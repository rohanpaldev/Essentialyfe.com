/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 46);
/******/ })
/************************************************************************/
/******/ ({

/***/ 46:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* ==========================================================
 * connect.js
 * ==========================================================
 * Copyright 2020 Awesome Motive.
 * https://awesomemotive.com
 * ========================================================== */
window.OMAPI = window.OMAPI || {};

(function (window, document, $, app, undefined) {
	'use strict';

	app.updateForm = function (val, $btn) {
		var field = document.getElementById('omapi-field-apikey');
		field.value = val;

		$btn.prop('disabled', true).attr('disabled', 'disabled');

		// Start spinner.
		$('.om-api-key-spinner').remove();
		$btn.after('<div class="om-api-key-spinner spinner is-active" style="float: none;margin-top: -1px;"></div>');

		if (window.sessionStorage) {
			sessionStorage.removeItem('omTemplates');
			sessionStorage.removeItem('omTemplatesAuth');
		}

		HTMLFormElement.prototype.submit.call(field.form);
	};

	app.handleAuthorizeClick = function (e) {
		e.preventDefault();
		app.$btn = $(e.target);

		try {
			var url = OMAPI.app_url + 'wordpress/connect/?site=' + encodeURIComponent(OMAPI.blogname);
			var w = window.open(url, '_blank', 'location=no,width=500,height=730,scrollbars=0');
			w.focus();
		} catch (e) {
			alert('Your browser blocked the authorization window from opening. Please check your popup settings.');
		}
	};

	app.handleIframeMessage = function (msg) {
		if (msg.origin.replace(/\/$/, '') !== OMAPI.app_url.replace(/\/$/, '')) {
			return;
		}

		if (!msg.data || 'string' !== typeof msg.data) {
			console.error('Messages from "' + OMAPI.app_url + '" must contain an api key string.');
			return;
		}

		app.updateForm(msg.data, app.$btn);
	};

	/**
  * Add the listeners necessary for the connect to OptinMonster button
  */
	app.initConnect = function () {
		app.$btn = $('#omapiAuthorizeButton');
		$('body').on('click', '#omapiAuthorizeButton, .omapi-authorize-button', app.handleAuthorizeClick);

		window.addEventListener('message', app.handleIframeMessage);
	};

	$(app.initConnect);
})(window, document, jQuery, window.OMAPI);

/***/ })

/******/ });